<?xml version="1.0" encoding="UTF-8"?>
<!--
  
  IMPORTANT!: After editing control.rnc run "make" to generate the
  RNG file and commit _both_ files to Git to keep them in sync!
  
  We do not generate the RNG file at build time as it adds huge dependecy (it
  is a Java tool so it requires complete Java stack)
  
-->
<grammar ns="http://www.suse.com/1.0/yast2ns" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:config="http://www.suse.com/1.0/configns" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    Single hash comments #  become <!- - XML comments- ->
    Double hash comments ## are preserved in .rng as <a:documentation>
  -->
  <define name="BOOLEAN">
    <a:documentation>Defined data-types</a:documentation>
    <!--
      This could be expressed also as
      'attribute ( t | type | config:type ) { "boolean" }'
      but libxml2-2.9.7 xmllint considers it incorrect schema :-(
    -->
    <choice>
      <a:documentation>Historically we used config:type
but it is unnecessarily long to type and read.
Shorter variants are allowed.</a:documentation>
      <attribute name="t">
        <value>boolean</value>
      </attribute>
      <attribute name="type">
        <value>boolean</value>
      </attribute>
      <attribute name="config:type">
        <value>boolean</value>
      </attribute>
    </choice>
    <choice>
      <value>true</value>
      <value>false</value>
    </choice>
  </define>
  <define name="INTEGER">
    <choice>
      <attribute name="t">
        <value>integer</value>
      </attribute>
      <attribute name="type">
        <value>integer</value>
      </attribute>
      <attribute name="config:type">
        <value>integer</value>
      </attribute>
    </choice>
    <data type="integer"/>
  </define>
  <define name="STRING">
    <optional>
      <choice>
        <attribute name="t">
          <value>string</value>
        </attribute>
        <attribute name="type">
          <value>string</value>
        </attribute>
        <attribute name="config:type">
          <value>string</value>
        </attribute>
      </choice>
    </optional>
    <text/>
  </define>
  <define name="SYMBOL">
    <choice>
      <attribute name="t">
        <value>symbol</value>
      </attribute>
      <attribute name="type">
        <value>symbol</value>
      </attribute>
      <attribute name="config:type">
        <value>symbol</value>
      </attribute>
    </choice>
  </define>
  <define name="LIST">
    <choice>
      <attribute name="t">
        <value>list</value>
      </attribute>
      <attribute name="type">
        <value>list</value>
      </attribute>
      <attribute name="config:type">
        <value>list</value>
      </attribute>
    </choice>
  </define>
  <define name="MAP">
    <optional>
      <choice>
        <attribute name="t">
          <value>map</value>
        </attribute>
        <attribute name="type">
          <value>map</value>
        </attribute>
        <attribute name="config:type">
          <value>map</value>
        </attribute>
      </choice>
    </optional>
  </define>
  <define name="DISKSIZE">
    <optional>
      <choice>
        <attribute name="t">
          <choice>
            <value>string</value>
            <value>disksize</value>
          </choice>
        </attribute>
        <attribute name="type">
          <choice>
            <value>string</value>
            <value>disksize</value>
          </choice>
        </attribute>
        <attribute name="config:type">
          <choice>
            <value>string</value>
            <value>disksize</value>
          </choice>
        </attribute>
      </choice>
    </optional>
    <choice>
      <value>unlimited</value>
      <list>
        <data type="integer"/>
        <choice>
          <value>B</value>
          <value>KiB</value>
          <value>MiB</value>
          <value>GiB</value>
          <value>TiB</value>
          <value>PiB</value>
          <value>EiB</value>
          <value>ZiB</value>
          <value>YiB</value>
          <value>KB</value>
          <value>MB</value>
          <value>GB</value>
          <value>TB</value>
          <value>PB</value>
          <value>EB</value>
          <value>ZB</value>
          <value>YB</value>
        </choice>
      </list>
    </choice>
  </define>
  <define name="ANY">
    <choice>
      <ref name="BOOLEAN"/>
      <ref name="INTEGER"/>
      <ref name="SYMBOL"/>
      <ref name="LIST"/>
      <ref name="STRING"/>
      <ref name="MAP"/>
    </choice>
  </define>
  <define name="YES_NO">
    <choice>
      <value>yes</value>
      <value>no</value>
    </choice>
  </define>
  <!-- types -->
  <define name="textdomain">
    <element name="textdomain">
      <ref name="STRING"/>
    </element>
  </define>
  <!-- globals -->
  <define name="globals_elements">
    <choice>
      <ref name="incomplete_translation_treshold"/>
      <ref name="additional_kernel_parameters"/>
      <ref name="ui_mode"/>
      <ref name="base_product_license_directory"/>
      <ref name="enable_autologin"/>
      <ref name="enable_firewall"/>
      <ref name="firewall_enable_ssh"/>
      <ref name="enable_sshd"/>
      <ref name="write_hostname_to_hosts"/>
      <ref name="dhclient_set_hostname"/>
      <ref name="run_init_scripts_in_parallel"/>
      <ref name="inform_about_suboptimal_distribution"/>
      <ref name="skip_language_dialog"/>
      <ref name="enable_clone"/>
      <ref name="save_y2logs"/>
      <ref name="enable_register_hwdata"/>
      <ref name="enable_register_optional"/>
      <ref name="disable_os_prober"/>
      <ref name="display_register_forcereg"/>
      <ref name="disable_register_w3m"/>
      <ref name="register_monthly"/>
      <ref name="manual_online_update"/>
      <ref name="root_password_as_first_user"/>
      <ref name="root_password_ca_check"/>
      <ref name="enable_local_users"/>
      <ref name="show_online_repositories"/>
      <ref name="online_repositories_default"/>
      <ref name="show_addons"/>
      <ref name="addons_default"/>
      <ref name="kexec_reboot"/>
      <ref name="rle_offer_rulevel_4"/>
      <ref name="default_ntp_setup"/>
      <ref name="save_instsys_content"/>
      <ref name="displaymanager_shutdown"/>
      <ref name="enable_kdump"/>
      <ref name="polkit_default_privs"/>
      <ref name="debug_workflow"/>
      <ref name="subworkflows"/>
      <ref name="default_subworkflow"/>
      <ref name="language"/>
      <ref name="timezone"/>
      <ref name="readonly_language"/>
      <ref name="readonly_timezone"/>
      <ref name="enable_autologin"/>
      <ref name="default_target"/>
      <ref name="require_registration"/>
      <ref name="services_proposal"/>
      <ref name="debug_deploying"/>
      <ref name="show_drivers_info"/>
      <ref name="self_update_url"/>
      <ref name="self_update_id"/>
      <ref name="self_update_version"/>
      <ref name="installation_ui"/>
      <ref name="installation_layout"/>
      <ref name="cpu_mitigations"/>
      <ref name="full_system_media_name"/>
      <ref name="full_system_download_url"/>
      <ref name="precise_time"/>
      <ref name="propose_hibernation"/>
      <ref name="default_ntp_servers"/>
      <ref name="lsm"/>
      <!-- (deprecated) but make it backward compatible (bsc#1194403) -->
      <ref name="selinux"/>
    </choice>
  </define>
  <define name="additional_kernel_parameters">
    <a:documentation>Default kernel parameters proposed by bootloader</a:documentation>
    <element name="additional_kernel_parameters">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="incomplete_translation_treshold">
    <a:documentation>How much per cent is the minimum coverage of translations to consider
it being 'complete'. Less are reported if user tries to switch to such
language during installation / upgrade.</a:documentation>
    <element name="incomplete_translation_treshold">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="base_product_license_directory">
    <a:documentation>Directory where the base-product (e.g., SLES) license files are stored</a:documentation>
    <element name="base_product_license_directory">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="ui_mode">
    <a:documentation>Defines an UI mode used in some modules to differentiate between
'simple' and 'expert' (obsolete).</a:documentation>
    <element name="ui_mode">
      <choice>
        <value>expert</value>
        <value>simple</value>
      </choice>
    </element>
  </define>
  <define name="displaymanager_shutdown">
    <a:documentation>Writes DISPLAYMANAGER_SHUTDOWN to /etc/sysconfig/displaymanager
if set</a:documentation>
    <element name="displaymanager_shutdown">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="polkit_default_privs">
    <a:documentation>Writes POLKIT_DEFAULT_PRIVS to /etc/sysconfig/security
if set</a:documentation>
    <element name="polkit_default_privs">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="default_subworkflow">
    <a:documentation>Defines the default subworkflow name (smaller subworkflow
created from another workflow).
Used by Wagon.</a:documentation>
    <element name="default_subworkflow">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="language">
    <a:documentation>Default language</a:documentation>
    <element name="language">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="readonly_language">
    <a:documentation>Language cannot be changed by the user</a:documentation>
    <element name="readonly_language">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="timezone">
    <a:documentation>Default timezone</a:documentation>
    <element name="timezone">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="readonly_timezone">
    <a:documentation>Timezone cannot be changed by the user</a:documentation>
    <element name="readonly_timezone">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="default_target">
    <a:documentation>Default runlevel</a:documentation>
    <element name="default_target">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="debug_workflow">
    <a:documentation>Debugging feature, makes workflow manaher to write
more detailed log entries</a:documentation>
    <element name="debug_workflow">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_autologin">
    <a:documentation>Default value for autologin</a:documentation>
    <element name="enable_autologin">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_firewall">
    <a:documentation>Default value for firewall</a:documentation>
    <element name="enable_firewall">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="firewall_enable_ssh">
    <a:documentation>Default value for opening port for SSH in firewall</a:documentation>
    <element name="firewall_enable_ssh">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_sshd">
    <a:documentation>Default value for SSHD service</a:documentation>
    <element name="enable_sshd">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="write_hostname_to_hosts">
    <a:documentation>Default value whether to write a system hostname to /etc/hosts</a:documentation>
    <element name="write_hostname_to_hosts">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="dhclient_set_hostname">
    <a:documentation>Default value whether to change hostname via DHCP</a:documentation>
    <element name="dhclient_set_hostname">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="run_init_scripts_in_parallel">
    <a:documentation>Defines whether startup scripts should run in a parallel mode.
This speeds the starting up but it is worse for debugging.
*obsolete* without replacement</a:documentation>
    <element name="run_init_scripts_in_parallel">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="inform_about_suboptimal_distribution">
    <element name="inform_about_suboptimal_distribution">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="skip_language_dialog">
    <element name="skip_language_dialog">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_clone">
    <a:documentation>Defines whether an AytoYaST cloning feature should be enabled</a:documentation>
    <element name="enable_clone">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="save_y2logs">
    <a:documentation>Defines if YaST logs are collected after finishing the installation/update
Default is true.
The TAR file will be stored in /var/log/YaST2/yast-installation-logs.tar.xz.</a:documentation>
    <element name="save_y2logs">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_register_hwdata">
    <a:documentation>Default value for 'send hardware data' with registration
*obsolete* without replacement</a:documentation>
    <element name="enable_register_hwdata">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_register_optional">
    <a:documentation>Default value for 'send optional system data' with registration
*obsolete* without replacement</a:documentation>
    <element name="enable_register_optional">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="disable_os_prober">
    <a:documentation>Defines if by default os probing should be disabled see. Default is false. (bnc#884007)</a:documentation>
    <element name="disable_os_prober">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="display_register_forcereg">
    <a:documentation>*obsolete* without replacement</a:documentation>
    <element name="display_register_forcereg">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="disable_register_w3m">
    <a:documentation>*obsolete* without replacement</a:documentation>
    <element name="disable_register_w3m">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="register_monthly">
    <a:documentation>*obsolete* without replacement</a:documentation>
    <element name="register_monthly">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="manual_online_update">
    <element name="manual_online_update">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="root_password_as_first_user">
    <element name="root_password_as_first_user">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="root_password_ca_check">
    <element name="root_password_ca_check">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_local_users">
    <element name="enable_local_users">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="show_online_repositories">
    <element name="show_online_repositories">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="online_repositories_default">
    <element name="online_repositories_default">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="show_addons">
    <element name="show_addons">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="addons_default">
    <element name="addons_default">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="kexec_reboot">
    <a:documentation>Defines whether kexec is the preferred mode instead of rebooting
between the first and the second stage of installation</a:documentation>
    <element name="kexec_reboot">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="rle_offer_rulevel_4">
    <a:documentation>Defines whether a special runlevel 4 should be offered
*obsolete* without replacement</a:documentation>
    <element name="rle_offer_rulevel_4">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="default_ntp_setup">
    <element name="default_ntp_setup">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="enable_kdump">
    <a:documentation>Defines whether kdump is enabled by default</a:documentation>
    <element name="enable_kdump">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="require_registration">
    <element name="require_registration">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="show_drivers_info">
    <element name="show_drivers_info">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <!-- Self-update URL (FATE#319716). -->
  <define name="self_update_url">
    <a:documentation>How it works?
here are two related keys for self update - URL and ID.
The ID is used to ask SCC for update URL.
The URL is used as fallback when SCC query failed.</a:documentation>
    <element name="self_update_url">
      <ref name="STRING"/>
    </element>
  </define>
  <!-- Self-update id (bsc#1055556). -->
  <define name="self_update_id">
    <a:documentation>It is an ID used to query SCC for the self update repo.</a:documentation>
    <element name="self_update_id">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="self_update_version">
    <a:documentation>Optional version for the product ID</a:documentation>
    <element name="self_update_version">
      <ref name="STRING"/>
    </element>
  </define>
  <!-- Installation UI (boo#1088785) -->
  <define name="installation_ui">
    <a:documentation>Enables alternative look of installation with sidebar.
This options is deprecated if favor of installation_layout.</a:documentation>
    <element name="installation_ui">
      <value>sidebar</value>
    </element>
  </define>
  <define name="installation_layout">
    <a:documentation>Configures the installation UI layout.</a:documentation>
    <element name="installation_layout">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="mode">
            <a:documentation>General layout mode</a:documentation>
            <choice>
              <value>steps</value>
              <value>title-on-left</value>
              <value>title-on-top</value>
            </choice>
          </element>
        </optional>
        <optional>
          <element name="banner">
            <a:documentation>Top banner where logo is usually placed</a:documentation>
            <ref name="BOOLEAN"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- Default value for CPU Mitigation settings in bootloader -->
  <define name="cpu_mitigations">
    <a:documentation>possible values are same as for autoyast and in UI - auto, nosmt, off, manual
see ::Bootloader::CpuMitigations.from_string</a:documentation>
    <element name="cpu_mitigations">
      <choice>
        <value>auto</value>
        <value>nosmt</value>
        <value>off</value>
        <value>manual</value>
      </choice>
    </element>
  </define>
  <!--
    Media name which contains ALL packages for an useful installation
    full_system_download_url has also to be set in order to display it.
  -->
  <define name="full_system_media_name">
    <element name="full_system_media_name">
      <ref name="STRING"/>
    </element>
  </define>
  <!--
    URL where the media described in full_system_download_url is located.
    full_system_media_name has also to be set in order to display it.
  -->
  <define name="full_system_download_url">
    <element name="full_system_download_url">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="precise_time">
    <a:documentation>Defines if product needs precise time. It is short time workaround for bsc#1145193</a:documentation>
    <element name="precise_time">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="propose_hibernation">
    <a:documentation>Defines if makes sense for product to propose hibernation (jsc#SLE-12280)
by default true</a:documentation>
    <element name="propose_hibernation">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="default_ntp_servers">
    <a:documentation>Defines list of default ntp servers from which product can pick.
Used mainly to distinguish between openSUSE and SUSE products. See bsc#1180699</a:documentation>
    <element name="default_ntp_servers">
      <ref name="LIST"/>
      <zeroOrMore>
        <element name="ntp_server">
          <ref name="STRING"/>
        </element>
      </zeroOrMore>
    </element>
  </define>
  <define name="lsm_configurable">
    <a:documentation>Linux Security Module configuration ## 
Whether the module can be proposed/configured during installation</a:documentation>
    <element name="configurable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="lsm_selectable">
    <a:documentation>Whether the module can be selected during installation</a:documentation>
    <element name="selectable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="lsm_patterns">
    <a:documentation>Space-separated list of required/suggested patterns for the module</a:documentation>
    <element name="patterns">
      <text/>
    </element>
  </define>
  <define name="lsm">
    <element name="lsm">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <ref name="lsm_select"/>
        </optional>
        <optional>
          <ref name="lsm_configurable"/>
        </optional>
        <optional>
          <ref name="lsm_selectable"/>
        </optional>
        <optional>
          <ref name="none_module"/>
        </optional>
        <optional>
          <ref name="selinux"/>
        </optional>
        <optional>
          <ref name="apparmor"/>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- Linux Security Major Module to be activated after installation -->
  <define name="lsm_select">
    <element name="select">
      <choice>
        <value>apparmor</value>
        <value>selinux</value>
        <value>none</value>
      </choice>
    </element>
  </define>
  <define name="lsm_module">
    <choice>
      <ref name="lsm_configurable"/>
      <ref name="lsm_selectable"/>
      <ref name="lsm_patterns"/>
    </choice>
  </define>
  <define name="apparmor">
    <a:documentation>AppArmor options</a:documentation>
    <element name="apparmor">
      <ref name="MAP"/>
      <zeroOrMore>
        <ref name="lsm_module"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- None options -->
  <define name="none_module">
    <element name="none">
      <ref name="MAP"/>
      <optional>
        <ref name="lsm_selectable"/>
      </optional>
    </element>
  </define>
  <define name="selinux_mode">
    <a:documentation>SELinux mode</a:documentation>
    <element name="mode">
      <choice>
        <value>disabled</value>
        <value>permissive</value>
        <value>enforcing</value>
      </choice>
    </element>
  </define>
  <define name="selinux">
    <a:documentation>SELinux options</a:documentation>
    <element name="selinux">
      <ref name="MAP"/>
      <zeroOrMore>
        <choice>
          <zeroOrMore>
            <ref name="lsm_module"/>
          </zeroOrMore>
          <optional>
            <ref name="selinux_mode"/>
          </optional>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="save_instsys_content">
    <a:documentation>Defines which pieces of installation system should be copied to
the installed system before rebooting to second stage.</a:documentation>
    <element name="save_instsys_content">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="save_instsys_item">
          <ref name="MAP"/>
          <interleave>
            <element name="system_directory">
              <a:documentation>Where to copy the installation-system file or directory
Absolut path is required.</a:documentation>
              <ref name="STRING"/>
            </element>
            <element name="instsys_directory">
              <a:documentation>Which file or directory to copy to installed system
Absolut path is required.</a:documentation>
              <ref name="STRING"/>
            </element>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="services_proposal">
    <element name="services_proposal">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="service">
          <ref name="MAP"/>
          <interleave>
            <optional>
              <element name="label_id">
                <ref name="STRING"/>
              </element>
            </optional>
            <element name="service_names">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="firewall_plugins">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="enabled_by_default">
                <ref name="BOOLEAN"/>
              </element>
            </optional>
            <optional>
              <element name="packages">
                <ref name="STRING"/>
              </element>
            </optional>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="subworkflows">
    <element name="subworkflows">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="subworkflow">
          <ref name="MAP"/>
          <interleave>
            <element name="name">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="modules">
                <ref name="LIST"/>
                <oneOrMore>
                  <element name="module">
                    <ref name="STRING"/>
                  </element>
                </oneOrMore>
              </element>
            </optional>
            <optional>
              <element name="proposals">
                <ref name="LIST"/>
                <oneOrMore>
                  <element name="proposal">
                    <ref name="STRING"/>
                  </element>
                </oneOrMore>
              </element>
            </optional>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="globals">
    <a:documentation>Global variables</a:documentation>
    <element name="globals">
      <ref name="MAP"/>
      <zeroOrMore>
        <ref name="globals_elements"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- globals -->
  <!-- software -->
  <define name="software_elements">
    <choice>
      <ref name="delete_old_packages"/>
      <ref name="select_product"/>
      <ref name="delete_old_packages_reverse_list"/>
      <ref name="disable_media_repo"/>
      <ref name="silently_downgrade_packages"/>
      <ref name="silently_downgrade_packages_reverse_list"/>
      <ref name="products_supported_for_upgrade"/>
      <ref name="selection_type"/>
      <ref name="default_system_scenario"/>
      <ref name="supported_desktops"/>
      <ref name="default_desktop"/>
      <ref name="display_support_status"/>
      <ref name="clone_install_recommended_default"/>
      <ref name="online_repos_preselected"/>
      <ref name="external_sources_link"/>
      <ref name="dropped_packages"/>
      <ref name="extra_urls"/>
      <ref name="base_selection"/>
      <ref name="packages_affecting_pkg_manager"/>
      <ref name="software_base"/>
      <ref name="software_addons"/>
      <ref name="software_packages"/>
      <ref name="kernel_packages"/>
      <ref name="packages_transmogrify"/>
      <ref name="default_patterns"/>
      <ref name="optional_default_patterns"/>
      <ref name="upgrade"/>
      <ref name="minimalistic_libzypp_config"/>
      <ref name="base_products"/>
      <ref name="software_default_modules"/>
    </choice>
  </define>
  <define name="select_product">
    <a:documentation>The name of the product which should be selected,
useful to choose it without asking the user (bsc#1124590).</a:documentation>
    <element name="select_product">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="delete_old_packages">
    <a:documentation>Whether it is allowed to delete a package during upgrade
*obsolete* without replacement</a:documentation>
    <element name="delete_old_packages">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="disable_media_repo">
    <a:documentation>Used in packager to distinguish whether cd / dvd repositories
should be disabled after installation or not.</a:documentation>
    <element name="disable_media_repo">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="selection_type">
    <element name="selection_type">
      <ref name="SYMBOL"/>
      <text/>
    </element>
  </define>
  <define name="default_system_scenario">
    <a:documentation>System scenario selected by default.
Used in inst_scenarios client.</a:documentation>
    <element name="default_system_scenario">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="default_desktop">
    <a:documentation>Desktop selected by default</a:documentation>
    <element name="default_desktop">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="display_support_status">
    <element name="display_support_status">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="clone_install_recommended_default">
    <element name="clone_install_recommended_default">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="silently_downgrade_packages">
    <element name="silently_downgrade_packages">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="online_repos_preselected">
    <element name="online_repos_preselected">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="external_sources_link">
    <element name="external_sources_link">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="dropped_packages">
    <a:documentation>Packages that should be removed by the upgrade.
Comma and/or space-separated list of packages</a:documentation>
    <element name="dropped_packages">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="base_selection">
    <element name="base_selection">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="software_base">
    <element name="base">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="packages_transmogrify">
    <a:documentation>a client that is called to modifiy the list of selected kernel packages</a:documentation>
    <element name="packages_transmogrify">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="software_addons">
    <element name="addons">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="addon">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="software_packages">
    <element name="packages">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="package">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <!--
    the default preselected products (modules) for the base product, used only
    in Full medium offline installation, see https://jira.suse.com/browse/SLE-8040
  -->
  <define name="software_default_modules">
    <element name="default_modules">
      <ref name="LIST"/>
      <zeroOrMore>
        <element name="default_module">
          <ref name="STRING"/>
        </element>
      </zeroOrMore>
    </element>
  </define>
  <define name="kernel_packages">
    <element name="kernel_packages">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="package">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="delete_old_packages_reverse_list">
    <a:documentation>*obsolete* without replacement</a:documentation>
    <element name="delete_old_packages_reverse_list">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="regexp_item">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="supported_desktops">
    <element name="supported_desktops">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="one_supported_desktop">
          <ref name="MAP"/>
          <interleave>
            <element name="name">
              <ref name="STRING"/>
            </element>
            <element name="desktop">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="label_id">
                <ref name="STRING"/>
              </element>
            </optional>
            <element name="logon">
              <ref name="STRING"/>
            </element>
            <element name="cursor">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="packages">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="order">
                <ref name="INTEGER"/>
              </element>
            </optional>
            <element name="patterns">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="icon">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="description_id">
                <ref name="STRING"/>
              </element>
            </optional>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="products_supported_for_upgrade">
    <a:documentation>List of products supported to be upgraded by this product</a:documentation>
    <element name="products_supported_for_upgrade">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="regexp_item">
          <a:documentation>One regular expression to match a product to upgrade</a:documentation>
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="silently_downgrade_packages_reverse_list">
    <element name="silently_downgrade_packages_reverse_list">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="regexp_item">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="extra_urls">
    <element name="extra_urls">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="extra_url">
          <ref name="MAP"/>
          <interleave>
            <element name="baseurl">
              <ref name="STRING"/>
            </element>
            <optional>
              <element name="name">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="alias">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="prod_dir">
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="enabled">
                <ref name="BOOLEAN"/>
              </element>
            </optional>
            <optional>
              <element name="autorefresh">
                <ref name="BOOLEAN"/>
              </element>
            </optional>
            <optional>
              <element name="priority">
                <ref name="INTEGER"/>
              </element>
            </optional>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="packages_affecting_pkg_manager">
    <element name="packages_affecting_pkg_manager">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="package">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <define name="default_patterns">
    <a:documentation>Space-separated list of default patterns selected for installation.
If such a pattern doesn't exist, error is reported. To omit reporting
such error, use optional_default_patterns instead.
These patterns are not selected in auto-installation.</a:documentation>
    <element name="default_patterns">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="optional_default_patterns">
    <a:documentation>Space-separated list of (optional) default patterns for installation.
These patterns will be selected only if they exist and thus it will
never report any error if a pattern is not found. Use default_patterns
for mandatory default patterns.
These patterns are not selected in auto-installation.</a:documentation>
    <element name="optional_default_patterns">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="upgrade">
    <a:documentation>Defines behavior during upgrade</a:documentation>
    <element name="upgrade">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="window_managers">
            <a:documentation>Optional list of upgrade paths for default window manager set
in /etc/sysconfig/windowmanager:DEFAULT_WM (not all cases need to be handled)</a:documentation>
            <ref name="LIST"/>
            <zeroOrMore>
              <element name="window_manager">
                <ref name="MAP"/>
                <interleave>
                  <element name="sysconfig_wm">
                    <a:documentation>Windowmanager as found in /etc/sysconfig/windowmanager:DEFAULT_WM
This entry is mandatory</a:documentation>
                    <ref name="STRING"/>
                  </element>
                  <optional>
                    <element name="check_packages">
                      <a:documentation>Space-separated list of packages to check whether the selected desktop
is really installed on the system</a:documentation>
                      <ref name="STRING"/>
                    </element>
                  </optional>
                  <oneOrMore>
                    <choice>
                      <a:documentation>Either install_patterns or install_packages (or both) must be defined</a:documentation>
                      <element name="install_patterns">
                        <a:documentation>Optional list of space-separated patterns that should be
selected for installation</a:documentation>
                        <ref name="STRING"/>
                      </element>
                      <element name="install_packages">
                        <a:documentation>Optional list of space-separated packages that should be
selected for installation</a:documentation>
                        <ref name="STRING"/>
                      </element>
                    </choice>
                  </oneOrMore>
                </interleave>
              </element>
            </zeroOrMore>
          </element>
        </optional>
        <optional>
          <element name="product_upgrades">
            <ref name="LIST"/>
            <zeroOrMore>
              <element name="product_upgrade">
                <ref name="MAP"/>
                <interleave>
                  <element name="from">
                    <ref name="STRING"/>
                  </element>
                  <element name="to">
                    <ref name="STRING"/>
                  </element>
                  <element name="compatible_vendors">
                    <ref name="LIST"/>
                    <zeroOrMore>
                      <element name="compatible_vendor">
                        <ref name="STRING"/>
                      </element>
                    </zeroOrMore>
                  </element>
                </interleave>
              </element>
            </zeroOrMore>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="software">
    <a:documentation>Software / Package-manager related variables</a:documentation>
    <element name="software">
      <ref name="MAP"/>
      <zeroOrMore>
        <ref name="software_elements"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="minimalistic_libzypp_config">
    <a:documentation>Minimalistic libzypp configuration (only requires, no documentation and no multiversion)</a:documentation>
    <element name="minimalistic_libzypp_config">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <!-- the base products for the SCC (Online medium only) -->
  <define name="base_products">
    <element name="base_products">
      <ref name="LIST"/>
      <oneOrMore>
        <ref name="base_product"/>
      </oneOrMore>
    </element>
  </define>
  <define name="base_product">
    <element name="base_product">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="special_product">
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <element name="display_name">
          <ref name="STRING"/>
        </element>
        <element name="name">
          <ref name="STRING"/>
        </element>
        <element name="version">
          <ref name="STRING"/>
        </element>
        <element name="register_target">
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="archs">
            <ref name="STRING"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- software -->
  <!-- partitioning -->
  <!--
    An overview of partitioning related settings can be found at
    https://github.com/yast/yast-storage-ng/blob/master/doc/old_and_new_proposal.md
    A more detailed explanation of each setting can be found at
    https://github.com/yast/yast-installation/blob/master/doc/control-file.md#partitioning
  -->
  <define name="partitioning_elements">
    <interleave>
      <ref name="partitioning_proposal"/>
      <ref name="partitioning_volumes"/>
      <optional>
        <ref name="expert_partitioner_warning"/>
      </optional>
    </interleave>
  </define>
  <define name="expert_partitioner_warning">
    <element name="expert_partitioner_warning">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="subvolumes">
    <a:documentation>Optional, but if this element appears (even if it's empty),
the internal fallback list is not used</a:documentation>
    <optional>
      <element name="subvolumes">
        <ref name="LIST"/>
        <zeroOrMore>
          <ref name="subvolume"/>
        </zeroOrMore>
      </element>
    </optional>
  </define>
  <define name="subvolume">
    <element name="subvolume">
      <ref name="MAP"/>
      <interleave>
        <element name="path">
          <a:documentation>subvolume path without leading /</a:documentation>
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="copy_on_write">
            <a:documentation>Optional: COW; default: true</a:documentation>
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <optional>
          <element name="archs">
            <a:documentation>Optional: comma-separated architectures (default: all)
Prepend ! to negate
Example 1: i386,x86_64
Example 2: ppc,!board_powernv
(i.e. on PPC, but not if it's a board_powernv machine</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="partitioning_proposal">
    <element name="proposal">
      <ref name="MAP"/>
      <ref name="partitioning_proposal_elements"/>
    </element>
  </define>
  <define name="partitioning_proposal_elements">
    <interleave>
      <optional>
        <ref name="lvm"/>
      </optional>
      <optional>
        <ref name="separate_vgs"/>
      </optional>
      <optional>
        <ref name="resize_windows"/>
      </optional>
      <optional>
        <ref name="windows_delete_mode"/>
      </optional>
      <optional>
        <ref name="linux_delete_mode"/>
      </optional>
      <optional>
        <ref name="other_delete_mode"/>
      </optional>
      <optional>
        <ref name="lvm_vg_strategy"/>
      </optional>
      <optional>
        <ref name="lvm_vg_size"/>
      </optional>
      <optional>
        <ref name="delete_resize_configurable"/>
      </optional>
      <optional>
        <ref name="allocate_volume_mode"/>
      </optional>
      <optional>
        <ref name="multidisk_first"/>
      </optional>
    </interleave>
  </define>
  <define name="lvm">
    <element name="lvm">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="separate_vgs">
    <element name="separate_vgs">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="resize_windows">
    <element name="resize_windows">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="windows_delete_mode">
    <element name="windows_delete_mode">
      <ref name="SYMBOL"/>
      <ref name="delete_mode_enum"/>
    </element>
  </define>
  <define name="linux_delete_mode">
    <element name="linux_delete_mode">
      <ref name="SYMBOL"/>
      <ref name="delete_mode_enum"/>
    </element>
  </define>
  <define name="other_delete_mode">
    <element name="other_delete_mode">
      <ref name="SYMBOL"/>
      <ref name="delete_mode_enum"/>
    </element>
  </define>
  <define name="lvm_vg_strategy">
    <element name="lvm_vg_strategy">
      <ref name="SYMBOL"/>
      <ref name="lvm_vg_strategy_enum"/>
    </element>
  </define>
  <define name="lvm_vg_size">
    <element name="lvm_vg_size">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="delete_resize_configurable">
    <element name="delete_resize_configurable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="allocate_volume_mode">
    <element name="allocate_volume_mode">
      <ref name="SYMBOL"/>
      <ref name="allocate_volume_mode_enum"/>
    </element>
  </define>
  <define name="multidisk_first">
    <element name="multidisk_first">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="delete_mode_enum">
    <choice>
      <value>none</value>
      <value>ondemand</value>
      <value>all</value>
    </choice>
  </define>
  <define name="allocate_volume_mode_enum">
    <choice>
      <value>auto</value>
      <value>device</value>
    </choice>
  </define>
  <define name="lvm_vg_strategy_enum">
    <choice>
      <value>use_available</value>
      <value>use_needed</value>
      <value>use_vg_size</value>
    </choice>
  </define>
  <define name="partitioning_volumes">
    <element name="volumes">
      <ref name="LIST"/>
      <oneOrMore>
        <ref name="partitioning_volume"/>
      </oneOrMore>
    </element>
  </define>
  <define name="partitioning_volume">
    <element name="volume">
      <ref name="MAP"/>
      <ref name="partitioning_volume_elements"/>
    </element>
  </define>
  <define name="partitioning_volume_elements">
    <interleave>
      <optional>
        <ref name="mount_point"/>
      </optional>
      <optional>
        <ref name="mount_options"/>
      </optional>
      <optional>
        <ref name="proposed"/>
      </optional>
      <optional>
        <ref name="proposed_configurable"/>
      </optional>
      <optional>
        <ref name="fs_types"/>
      </optional>
      <optional>
        <ref name="fs_type"/>
      </optional>
      <optional>
        <ref name="desired_size"/>
      </optional>
      <optional>
        <ref name="min_size"/>
      </optional>
      <optional>
        <ref name="max_size"/>
      </optional>
      <optional>
        <ref name="max_size_lvm"/>
      </optional>
      <optional>
        <ref name="weight"/>
      </optional>
      <optional>
        <ref name="adjust_by_ram"/>
      </optional>
      <optional>
        <ref name="adjust_by_ram_configurable"/>
      </optional>
      <optional>
        <ref name="fallback_for_desired_size"/>
      </optional>
      <optional>
        <ref name="fallback_for_min_size"/>
      </optional>
      <optional>
        <ref name="fallback_for_max_size"/>
      </optional>
      <optional>
        <ref name="fallback_for_max_size_lvm"/>
      </optional>
      <optional>
        <ref name="fallback_for_weight"/>
      </optional>
      <optional>
        <ref name="snapshots"/>
      </optional>
      <optional>
        <ref name="snapshots_configurable"/>
      </optional>
      <optional>
        <ref name="snapshots_size_or_percentage"/>
      </optional>
      <optional>
        <ref name="subvolumes"/>
      </optional>
      <optional>
        <ref name="btrfs_default_subvolume"/>
      </optional>
      <optional>
        <ref name="disable_order"/>
      </optional>
      <optional>
        <ref name="btrfs_read_only"/>
      </optional>
      <optional>
        <ref name="separate_vg_name"/>
      </optional>
    </interleave>
  </define>
  <define name="snapshots_size_or_percentage">
    <choice>
      <ref name="snapshots_size"/>
      <ref name="snapshots_percentage"/>
    </choice>
  </define>
  <define name="mount_point">
    <element name="mount_point">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="mount_options">
    <element name="mount_options">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="proposed">
    <element name="proposed">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="proposed_configurable">
    <element name="proposed_configurable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="fs_types">
    <element name="fs_types">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="fs_type">
    <element name="fs_type">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="desired_size">
    <element name="desired_size">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="min_size">
    <element name="min_size">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="max_size">
    <element name="max_size">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="max_size_lvm">
    <element name="max_size_lvm">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="weight">
    <element name="weight">
      <ref name="INTEGER"/>
    </element>
  </define>
  <define name="adjust_by_ram">
    <element name="adjust_by_ram">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="adjust_by_ram_configurable">
    <element name="adjust_by_ram_configurable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="fallback_for_desired_size">
    <element name="fallback_for_desired_size">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="fallback_for_min_size">
    <element name="fallback_for_min_size">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="fallback_for_max_size">
    <element name="fallback_for_max_size">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="fallback_for_max_size_lvm">
    <element name="fallback_for_max_size_lvm">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="fallback_for_weight">
    <element name="fallback_for_weight">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="snapshots">
    <element name="snapshots">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="snapshots_configurable">
    <element name="snapshots_configurable">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="snapshots_size">
    <element name="snapshots_size">
      <ref name="DISKSIZE"/>
    </element>
  </define>
  <define name="snapshots_percentage">
    <element name="snapshots_percentage">
      <ref name="INTEGER"/>
    </element>
  </define>
  <define name="btrfs_default_subvolume">
    <element name="btrfs_default_subvolume">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="disable_order">
    <element name="disable_order">
      <ref name="INTEGER"/>
    </element>
  </define>
  <define name="btrfs_read_only">
    <element name="btrfs_read_only">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="separate_vg_name">
    <element name="separate_vg_name">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="partitioning">
    <a:documentation>Partitioning-related variables</a:documentation>
    <element name="partitioning">
      <ref name="MAP"/>
      <ref name="partitioning_elements"/>
    </element>
  </define>
  <!-- partitioning -->
  <!-- network -->
  <define name="network_elements">
    <choice>
      <ref name="force_static_ip"/>
      <ref name="network_manager"/>
      <ref name="startmode"/>
      <ref name="ipv4_forward"/>
      <ref name="ipv6_forward"/>
    </choice>
  </define>
  <define name="force_static_ip">
    <element name="force_static_ip">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="network_manager">
    <element name="network_manager">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="startmode">
    <element name="startmode">
      <ref name="STRING"/>
    </element>
  </define>
  <define name="ipv4_forward">
    <element name="ipv4_forward">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="ipv6_forward">
    <element name="ipv6_forward">
      <ref name="BOOLEAN"/>
    </element>
  </define>
  <define name="network">
    <a:documentation>Network configuration-related variables</a:documentation>
    <element name="network">
      <ref name="MAP"/>
      <zeroOrMore>
        <ref name="network_elements"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- network -->
  <!-- system_roles -->
  <define name="system_roles">
    <a:documentation>System Roles, FATE#317481</a:documentation>
    <element name="system_roles">
      <ref name="LIST"/>
      <zeroOrMore>
        <ref name="system_role">
          <a:documentation>The first one is preselected in the dialog.
If empty, the dialog is skipped.</a:documentation>
        </ref>
      </zeroOrMore>
    </element>
  </define>
  <define name="system_role">
    <element name="system_role">
      <ref name="MAP"/>
      <interleave>
        <element name="id">
          <a:documentation>An identifier not visible to the user.
Used to identify the translated user visible strings in the
texts section: ${id} and ${id}_description.</a:documentation>
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="no_default">
            <a:documentation>option to not preselect any role, by default,
the first one (by sort order, see below) is preselected
Only the first (by sort order, see below) role should have this key, others are ignored.</a:documentation>
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <element name="order">
          <a:documentation>Option for order of role. Roles are sorted by order, the smaller first. It can be negative.
If two roles have same order, then result is undefined, so try to avoid it.</a:documentation>
          <ref name="INTEGER"/>
        </element>
        <optional>
          <ref name="partitioning">
            <a:documentation>Role specific overrides for Partitioning</a:documentation>
          </ref>
        </optional>
        <optional>
          <ref name="software">
            <a:documentation>Role specific overrides for Software</a:documentation>
          </ref>
        </optional>
        <optional>
          <element name="additional_dialogs">
            <a:documentation>Additional dialogs that are runned when given role is selected, comma separated</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <ref name="role_services">
            <a:documentation>Additional services configuration for given role</a:documentation>
          </ref>
        </optional>
        <zeroOrMore>
          <ref name="globals">
            <a:documentation>Role specific overrides for Global</a:documentation>
          </ref>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="network">
            <a:documentation>Role specific overrides for Network</a:documentation>
          </ref>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="proposals">
            <a:documentation>Role specific overrides for Proposals</a:documentation>
          </ref>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="clone_modules">
            <a:documentation>Role specific overrides for Cloned modules</a:documentation>
          </ref>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="role_services">
    <element name="services">
      <ref name="LIST"/>
      <zeroOrMore>
        <ref name="role_service">
          <a:documentation>specification of one service for given role</a:documentation>
        </ref>
      </zeroOrMore>
    </element>
  </define>
  <define name="role_service">
    <element name="service">
      <ref name="MAP"/>
      <element name="name">
        <ref name="STRING"/>
      </element>
    </element>
  </define>
  <!-- clone_modules -->
  <define name="clone_modules">
    <a:documentation>List of modules used by AutoYaST for cloning the configuration</a:documentation>
    <element name="clone_modules">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="clone_module">
          <ref name="STRING"/>
        </element>
      </oneOrMore>
    </element>
  </define>
  <!-- clone_modules -->
  <!-- texts -->
  <define name="texts">
    <a:documentation>Control-file texts marked for translation</a:documentation>
    <element name="texts">
      <ref name="MAP"/>
      <oneOrMore>
        <element>
          <anyName/>
          <ref name="MAP"/>
          <element name="label">
            <ref name="STRING"/>
          </element>
        </element>
      </oneOrMore>
    </element>
  </define>
  <!-- texts -->
  <!-- proposals -->
  <define name="proposal_module">
    <a:documentation>There are two types of element 'proposal_modules'
 1.) proposal_modules with attributes 'name' and 'presentation_order'
 2.) proposal_modules with inexplicit 'name'</a:documentation>
    <a:documentation>Proposal module with 'name' and 'presentation_order'</a:documentation>
    <element name="proposal_module">
      <choice>
        <group>
          <ref name="MAP"/>
          <interleave>
            <optional>
              <element name="name">
                <a:documentation>Proposal name</a:documentation>
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <element name="presentation_order">
                <a:documentation>Presentation order in the current proposal (integer).
Lower numbers first.</a:documentation>
                <ref name="STRING"/>
              </element>
            </optional>
            <optional>
              <!-- proposal writable -->
              <element name="read_only">
                <a:documentation>Read only flag - if "hard" the proposal cannot be changed (clicked) by user,
if "soft" the proposal can be changed in case of error. By default is every</a:documentation>
                <ref name="STRING"/>
              </element>
            </optional>
          </interleave>
        </group>
        <ref name="STRING">
          <a:documentation>Inexplicit proposal name if not explicitely defined by 'name' and 'presentation_order'</a:documentation>
        </ref>
      </choice>
    </element>
  </define>
  <define name="proposal">
    <a:documentation>Proposal defines one configuration step with one or more proposal_modules
inside. Proposal modules usually depend on each other so the order does
matter. If you want to list proposal modules in a different order, use
'presentation' order attribute.</a:documentation>
    <element name="proposal">
      <ref name="MAP"/>
      <interleave>
        <element name="unique_id">
          <a:documentation>Unique ID of the proposal</a:documentation>
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="label">
            <a:documentation/>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="archs">
            <a:documentation>Defines for which architectures is this proposal used.
Comma-separated list of architectures as seen in
/usr/share/YaST2/modules/Arch.ycp
Valid for all architectures if not explicitely defined.
See Arch::arch_short</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="mode">
            <a:documentation>Defines for which mode is this proposal used.
Comma-separated list of modes as seen in
/usr/share/YaST2/modules/Mode.ycp
Valid for all modes if not explicitely defined.</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <element name="stage">
          <a:documentation>Defines for which stage is this proposal used.
Comma-separated list of stages as seen in
/usr/share/YaST2/modules/Stage.ycp
Valid for all stages if not explicitely defined.</a:documentation>
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="name">
            <a:documentation>Proposal name used later to define which proposal to use</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="type">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="enable_skip">
            <a:documentation>Defines whether a proposal can be skipped</a:documentation>
            <ref name="YES_NO"/>
          </element>
        </optional>
        <optional>
          <element name="proposal_modules">
            <a:documentation>List of modules in proposal</a:documentation>
            <ref name="LIST"/>
            <oneOrMore>
              <ref name="proposal_module"/>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="proposal_tabs">
            <a:documentation>Defines how/whether tabs are used in proposal, e.g.,
Simple tab vs. Expert tab.
If tabs are used, 'proposal_modules' above is still used
but its presentation_order ignored.</a:documentation>
            <ref name="LIST"/>
            <oneOrMore>
              <element name="proposal_tab">
                <a:documentation>Defines one tab in a proposal</a:documentation>
                <ref name="MAP"/>
                <interleave>
                  <element name="label">
                    <a:documentation>Label on the tab</a:documentation>
                    <ref name="STRING"/>
                  </element>
                  <element name="proposal_modules">
                    <a:documentation>List of proposal modules</a:documentation>
                    <ref name="LIST"/>
                    <oneOrMore>
                      <ref name="proposal_module"/>
                    </oneOrMore>
                  </element>
                </interleave>
              </element>
            </oneOrMore>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- List of all proposals in control file -->
  <define name="proposals">
    <element name="proposals">
      <ref name="LIST"/>
      <oneOrMore>
        <ref name="proposal"/>
      </oneOrMore>
    </element>
  </define>
  <!-- proposals -->
  <!-- workflows -->
  <!-- Describes one step in a workflow -->
  <define name="module">
    <element name="module">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="name">
            <a:documentation>Name of a step.
Used as an identification for updating, removing etc. of steps.
If 'execute' is not used, 'name' also defines name of a YCP script
called by YaST. In installation or upgrade, all script have to match
inst_(.*) regexp.</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="execute">
            <a:documentation>Defines exact name of a YCP script (without .ycp suffix)</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="label">
            <a:documentation>Defines a configuration step shown in workflow with steps.
If empty, a label defined in closes step before is used.</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="heading">
            <a:documentation>Defines a heading step. Heading usually does not have any client
to run and defines only the major step in workflow.</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="archs">
            <a:documentation>Defines for which architectures is this module used.
Comma-separated list of architectures as seen in
/usr/share/YaST2/modules/Arch.ycp
Valid for all architectures if not explicitely defined.
See Arch::arch_short</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="proposal">
            <a:documentation>Defines which proposal to call in this step.
Proposal 'name' is used.</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="enable_back">
            <a:documentation>Defines whether the [Back] button is enabled by default in this step.</a:documentation>
            <ref name="YES_NO"/>
          </element>
        </optional>
        <optional>
          <element name="enable_next">
            <a:documentation>Defines whether the [Next] button is enabled by default in this step.</a:documentation>
            <ref name="YES_NO"/>
          </element>
        </optional>
        <optional>
          <element name="arguments">
            <a:documentation>Additional module arguments</a:documentation>
            <choice>
              <group>
                <ref name="MAP"/>
                <optional>
                  <element name="first_run">
                    <ref name="YES_NO"/>
                  </element>
                </optional>
              </group>
              <group>
                <ref name="MAP"/>
                <zeroOrMore>
                  <element>
                    <anyName/>
                    <ref name="STRING"/>
                  </element>
                </zeroOrMore>
              </group>
              <!-- used in autoyast -->
              <ref name="STRING"/>
            </choice>
          </element>
        </optional>
        <optional>
          <element name="retranslate">
            <a:documentation>Should YaST retranslate the whole screen after this client is called?
Default is 'true'.</a:documentation>
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <optional>
          <element name="update">
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <optional>
          <element name="enabled">
            <a:documentation>Defines whether a module is enabled by default.
Default value is 'true'</a:documentation>
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <optional>
          <element name="prescript">
            <a:documentation>Script body called before the described step</a:documentation>
            <ref name="MAP"/>
            <interleave>
              <element name="interpreter">
                <a:documentation>@example
shell</a:documentation>
                <ref name="STRING"/>
              </element>
              <element name="source">
                <a:documentation>@example
&lt;![CDATA[#!/bin/sh
echo test &gt; /tmp/test
]]&gt;</a:documentation>
                <ref name="STRING"/>
              </element>
            </interleave>
          </element>
        </optional>
        <optional>
          <element name="postscript">
            <a:documentation>Script body called after the described step</a:documentation>
            <ref name="MAP"/>
            <interleave>
              <element name="interpreter">
                <ref name="STRING"/>
              </element>
              <element name="source">
                <ref name="STRING"/>
              </element>
            </interleave>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="workflow_defaults">
    <a:documentation>Defines the default workflow settings</a:documentation>
    <element name="defaults">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="archs">
            <a:documentation>For which architectures is this default valid</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="arguments">
            <a:documentation>Special patemeters used by AutoYaST</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <element name="enable_back">
            <a:documentation>Is [Back] button enabled by default?
If not set, default values is 'yes'.</a:documentation>
            <ref name="YES_NO"/>
          </element>
        </optional>
        <optional>
          <element name="enable_next">
            <a:documentation>Is [Next] button enabled by default?
If not set, default values is 'yes'.</a:documentation>
            <ref name="YES_NO"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="workflow">
    <a:documentation>Workflow, defines for instance, 'second stage installation'</a:documentation>
    <element name="workflow">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <ref name="workflow_defaults"/>
        </optional>
        <optional>
          <element name="label">
            <a:documentation>Superstep name visible in UI</a:documentation>
            <ref name="STRING"/>
          </element>
        </optional>
        <element name="mode">
          <a:documentation>Defines for which mode is this proposal used.
Comma-separated list of modes as seen in
/usr/share/YaST2/modules/Mode.ycp
Valid for all modes if not explicitely defined.</a:documentation>
          <ref name="STRING"/>
        </element>
        <element name="stage">
          <a:documentation>Defines for which stage is this workflow used.
Comma-separated list of stages as seen in
/usr/share/YaST2/modules/Stage.ycp
Valid for all stages if not explicitely defined.</a:documentation>
          <ref name="STRING"/>
        </element>
        <element name="modules">
          <a:documentation>List of modules in workflow</a:documentation>
          <ref name="LIST"/>
          <oneOrMore>
            <ref name="module"/>
          </oneOrMore>
        </element>
      </interleave>
    </element>
  </define>
  <!-- List of all defined workflows -->
  <define name="workflows">
    <element name="workflows">
      <ref name="LIST"/>
      <oneOrMore>
        <ref name="workflow"/>
      </oneOrMore>
    </element>
  </define>
  <!-- workflows -->
  <!-- inst_finish_stages -->
  <define name="inst_finish_stages">
    <element name="inst_finish_stages">
      <ref name="LIST"/>
      <oneOrMore>
        <element name="inst_finish_stage">
          <ref name="MAP"/>
          <interleave>
            <element name="label">
              <ref name="STRING"/>
            </element>
            <element name="steps">
              <ref name="LIST"/>
              <oneOrMore>
                <element name="step">
                  <ref name="STRING"/>
                </element>
              </oneOrMore>
            </element>
          </interleave>
        </element>
      </oneOrMore>
    </element>
  </define>
  <!-- inst_finish_stages -->
  <!-- update -->
  <define name="update_workflow">
    <element name="workflow">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <ref name="workflow_defaults"/>
        </optional>
        <optional>
          <element name="label">
            <ref name="STRING"/>
          </element>
        </optional>
        <element name="stage">
          <ref name="STRING"/>
        </element>
        <element name="mode">
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="insert_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="insert_module">
                <interleave>
                  <element name="before">
                    <ref name="STRING"/>
                  </element>
                  <element name="modules">
                    <ref name="LIST"/>
                    <oneOrMore>
                      <ref name="module"/>
                    </oneOrMore>
                  </element>
                </interleave>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="append_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <ref name="module"/>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="remove_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="remove_module">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="replace_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="replace_module">
                <ref name="MAP"/>
                <interleave>
                  <element name="replace">
                    <ref name="STRING"/>
                  </element>
                  <element name="modules">
                    <ref name="LIST"/>
                    <oneOrMore>
                      <ref name="module"/>
                    </oneOrMore>
                  </element>
                </interleave>
              </element>
            </oneOrMore>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="update_proposal">
    <element name="proposal">
      <ref name="MAP"/>
      <interleave>
        <element name="stage">
          <ref name="STRING"/>
        </element>
        <element name="mode">
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="label">
            <ref name="STRING"/>
          </element>
        </optional>
        <element name="name">
          <ref name="STRING"/>
        </element>
        <optional>
          <element name="enable_skip">
            <ref name="YES_NO"/>
          </element>
        </optional>
        <optional>
          <element name="append_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="append_module">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="remove_modules">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="remove_module">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="replace_modules">
            <ref name="LIST"/>
            <element name="replace_module">
              <ref name="MAP"/>
              <interleave>
                <element name="replace">
                  <ref name="STRING"/>
                </element>
                <element name="new_modules">
                  <ref name="LIST"/>
                  <oneOrMore>
                    <element name="new_module">
                      <ref name="STRING"/>
                    </element>
                  </oneOrMore>
                </element>
              </interleave>
            </element>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="update_system_roles">
    <element name="system_roles">
      <ref name="MAP"/>
      <optional>
        <element name="insert_system_roles">
          <ref name="LIST"/>
          <oneOrMore>
            <element name="insert_system_role">
              <ref name="system_roles"/>
            </element>
          </oneOrMore>
        </element>
      </optional>
    </element>
  </define>
  <define name="update">
    <element name="update">
      <ref name="MAP"/>
      <interleave>
        <optional>
          <element name="proposals">
            <ref name="LIST"/>
            <oneOrMore>
              <ref name="update_proposal"/>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="workflows">
            <ref name="LIST"/>
            <oneOrMore>
              <ref name="update_workflow"/>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <element name="inst_finish">
            <interleave>
              <optional>
                <element name="before_chroot">
                  <ref name="LIST"/>
                  <oneOrMore>
                    <element name="module">
                      <ref name="STRING"/>
                    </element>
                  </oneOrMore>
                </element>
              </optional>
              <optional>
                <element name="after_chroot">
                  <ref name="LIST"/>
                  <oneOrMore>
                    <element name="module">
                      <ref name="STRING"/>
                    </element>
                  </oneOrMore>
                </element>
              </optional>
              <optional>
                <element name="before_umount">
                  <ref name="LIST"/>
                  <oneOrMore>
                    <element name="module">
                      <ref name="STRING"/>
                    </element>
                  </oneOrMore>
                </element>
              </optional>
            </interleave>
          </element>
        </optional>
        <optional>
          <ref name="update_system_roles"/>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- update -->
  <define name="configuration_management">
    <element name="configuration_management">
      <ref name="MAP"/>
      <interleave>
        <!-- Configuration managment system to use -->
        <element name="type">
          <choice>
            <value>salt</value>
            <value>puppet</value>
          </choice>
        </element>
        <optional>
          <!-- Host name or IP address of the master server -->
          <element name="master">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <!-- Number of attempts when trying to connect to the master server -->
          <element name="auth_attempts">
            <ref name="INTEGER"/>
          </element>
        </optional>
        <optional>
          <!-- Time between attempts to connect to the master server -->
          <element name="auth_time_out">
            <ref name="INTEGER"/>
          </element>
        </optional>
        <optional>
          <!--
            Path to an HTTTP(S) server, hard disk, USB driver or similar containing the
            private/public keys to connect to the master server
          -->
          <element name="keys_url">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <!-- Enable the configuration management system services after the installation -->
          <element name="enable_services">
            <ref name="BOOLEAN"/>
          </element>
        </optional>
        <optional>
          <!-- Salt specific -->
          <!-- Path to write Pillar data -->
          <element name="pillar_root">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <!-- URL to read Pillar data from -->
          <element name="pillar_url">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <!-- Paths to search for formulas -->
          <element name="formulas_roots">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="formulas_root">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <!-- Paths to search for states -->
          <element name="states_roots">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="states_root">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <!-- URL to get states from -->
          <element name="states_url">
            <ref name="STRING"/>
          </element>
        </optional>
        <optional>
          <!-- List of states/formulas to enable -->
          <element name="enabled_states">
            <ref name="LIST"/>
            <oneOrMore>
              <element name="state">
                <ref name="STRING"/>
              </element>
            </oneOrMore>
          </element>
        </optional>
        <optional>
          <!-- Puppet specific -->
          <!-- URL to read Puppet modules from -->
          <element name="modules_url">
            <ref name="STRING"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- not more than one partitioning element -->
  <define name="productDefines_elements">
    <interleave>
      <zeroOrMore>
        <ref name="textdomain"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="globals"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="software"/>
      </zeroOrMore>
      <optional>
        <ref name="partitioning"/>
      </optional>
      <zeroOrMore>
        <ref name="network"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="proposals"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="workflows"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="clone_modules"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="texts"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="inst_finish_stages"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="update"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="system_roles"/>
      </zeroOrMore>
      <optional>
        <ref name="configuration_management"/>
      </optional>
    </interleave>
  </define>
  <start>
    <element name="productDefines">
      <ref name="productDefines_elements"/>
    </element>
  </start>
  <define name="debug_deploying">
    <element name="debug_deploying">
      <ref name="BOOLEAN"/>
    </element>
  </define>
</grammar>
